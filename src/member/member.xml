<?xml version="1.0" encoding="utf-8" ?>
<!DOCTYPE sqlMap PUBLIC "-//iBATIS.com//DTD SQL Map 2.0//EN" "http://ibatis.apache.org/dtd/sql-map-2.dtd">
<sqlMap namespace="member">
    
    <!-- 공통조건 -->
	<sql id="searchSql">		
		<!-- WHERE 절 검색 -->
		<dynamic prepend="where">
		    1=1
			<isNotNull property="sval">
				<isNotEqual property="sval" compareValue="">
					<isEqual property="stype" compareValue="all">
						and ( (name like '%$sval$%' ) or (id like '%$sval$%' ) or (cell like '%$sval$%' ) or (email like '%$sval$%' ) ) 					
					</isEqual>
					<isNotEqual property="stype" compareValue="all">
						and ($stype$ like '%$sval$%' )
					</isNotEqual>
				</isNotEqual>
			</isNotNull>
			
			<isNotNull property="sgrade">
				<isNotEqual property="sgrade" compareValue="">
					AND grade = $sgrade$
				</isNotEqual>
			</isNotNull>

			<isNotNull property="ssecession">
				<isNotEqual property="ssecession" compareValue="all">
					AND secession = $ssecession$
				</isNotEqual>
			</isNotNull>
			
		</dynamic>
	</sql>
	
	<select id="count" parameterClass="java.util.HashMap" resultClass="Integer">
        select count(*) from member
        <include refid="searchSql" />	
    </select>
	
    <select id="list" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        select * from member
        <include refid="searchSql" />
		ORDER BY registdate DESC LIMIT $startPageNo$, $pageRows$	
    </select>
    
    
    <insert id="insert" parameterClass="java.util.HashMap" >
        insert into member
        	(grade, id, name, secession, tel, cell, email, zipcode, addr0, addr1, password, division, position, registdate)
        values
        	(#grade#, #id#, #name#, #secession#, #tel#, #cell#, #email#, #zipcode#, #addr0#, #addr1#, #USER_PWD#, #division#, #position#, NOW())
        <selectKey keyProperty="no" resultClass="Integer">
			SELECT  LAST_INSERT_ID()
		</selectKey>
    </insert>
    
    <update id="update" parameterClass="java.util.HashMap">
        update member set
        <isNotNull property="USER_PWD">
        	<isNotEqual property="USER_PWD" compareValue="">
        	    password = #USER_PWD#,
        	</isNotEqual>
        </isNotNull>
        	grade = #grade#, name = #name#, secession = #secession#, tel = #tel#, cell = #cell#, email = #email#, zipcode=#zipcode#, addr0 = #addr0#, addr1 = #addr1#, division=#division#, position=#position#
        where no = #no#
    </update>
    
    <update id="updateUser" parameterClass="java.util.HashMap">
        update member set
        	<isNotEqual property="USER_PWD" compareValue="">
        	    password = #USER_PWD#,
        	</isNotEqual>
        	email = #email#, tel = #tel#, cell = #cell#, zipcode = #zipcode#, addr0 = #addr0#, addr1 = #addr1#, division=#division#, position=#position#
        where no = #no#
    </update>
    
    <update id="updatePwd" parameterClass="java.util.HashMap">
        update member set
        	    password = #USER_PWD#
        where no=#no#
    </update>
    
    <update id="updateTempPass" parameterClass="java.util.Map">
        UPDATE member SET
        	    password = (#USER_PWD#)
        WHERE no=#no#
    </update>
    
    <delete id="delete" parameterClass="Integer">
        delete from member where no=#no#
    </delete>
    
    <select id="read" parameterClass="Integer" resultClass="java.util.HashMap">
    	<![CDATA[
        select *
         from member where no=#no#
         ]]>
    </select>
    
    <select id="loginCheck" parameterClass="java.util.HashMap" resultClass="String">
        select password from member where id=#id# AND secession != 1
    </select>
    
    <select id="loginSessionInfo" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        select * from member where id=#id# AND secession != 1
    </select>
    
    <update id="updateLogin" parameterClass="java.util.HashMap">
        update member set
        	LAST_LGN_DTM=NOW(), LAST_IP=#LAST_IP#
        where USER_ID=#USER_ID#
    </update>
    
    <select id="idcheck" parameterClass="java.util.HashMap" resultClass="Integer">
        select count(*) as cnt from member where id=#id#
    </select>
    
    <select id="emailcheck" parameterClass="java.util.HashMap" resultClass="Integer">
        select count(*) as cnt from member where email=#email# AND secession != 1
    </select>

    <select id="checkPassword" parameterClass="java.util.HashMap" resultClass="String">
        select password from member where id=#id#  AND secession != 1
    </select>
    
    <update id="secession" parameterClass="Integer">
        update member set
        	secession = '1'
        where no=#no#
    </update>


    
    <select id="idsearch" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        select * from member where name=#name# AND email = #email#
    </select>

    
    <select id="pwsearch" parameterClass="java.util.HashMap" resultClass="java.util.HashMap">
        select * from member where id=#id# and name=#name# and email=#email# 
    </select>
    
	
</sqlMap>